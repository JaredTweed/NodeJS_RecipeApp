events {}

http {
    server {
        listen 80;

        # Serve static files from the Angular application
        location / {
            root /usr/share/nginx/html;
            index index.html index.htm;
            try_files $uri $uri/ /index.html;
        }

        # Proxy requests to /api to the Express backend
        location /api {
            # Assuming 'server' is the name of the service in docker-compose and listens on port 8080
            proxy_pass http://server:8080;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}





# server {
#     listen 80;

#     location / {
#         root /usr/share/nginx/html;
#         index index.html index.htm;
#         try_files $uri $uri/ =404;
#     }

#     location /api/ {
#         proxy_pass http://server:8080/; # Assuming 'server' is the name of your NodeJS service in docker-compose
#         proxy_http_version 1.1;
#         proxy_set_header Upgrade $http_upgrade;
#         proxy_set_header Connection 'upgrade';
#         proxy_set_header Host $host;
#         proxy_cache_bypass $http_upgrade;
#     }
# }


# worker_processes 1;

# events {
#     worker_connections 1024;
# }

# http {
#     sendfile on;

#     upstream app_server {
#         # The server service as defined in docker-compose.yml
#         server server:8080;
#     }

#     server {
#         listen 80;

#         location / {
#             root /usr/share/nginx/html;
#             try_files $uri $uri/ /index.html;
#         }

#         location /api/ {
#             proxy_pass http://app_server;
#             proxy_http_version 1.1;
#             proxy_set_header Upgrade $http_upgrade;
#             proxy_set_header Connection 'upgrade';
#             proxy_set_header Host $host;
#             proxy_cache_bypass $http_upgrade;
#         }
#     }
# }


# user  nginx;
# worker_processes  1;
# error_log  /var/log/nginx/error.log warn;
# pid        /var/run/nginx.pid;
# events {
#     worker_connections  1024;
# }
# http {
#     include       /etc/nginx/mime.types;
#     default_type  application/octet-stream;

#     log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
#                       '$status $body_bytes_sent "$http_referer" '
#                       '"$http_user_agent" "$http_x_forwarded_for"';
#     access_log  /var/log/nginx/access.log  main;
#     server {
#         listen 80;
         
#          location = /status {
#              access_log off;
#              default_type text/plain;
#              add_header Content-Type text/plain;
#              return 200 "alive";
#         }
        
#          location / {
#             gzip off;
#             root /usr/share/nginx/html/;
#             index  index.html;
#         }
        
#         location ~* \.(js|jpg|png|css)$ {
#             root /usr/share/nginx/html/;
#         }
#     } 
#     sendfile        on;
#     keepalive_timeout  65;
# }